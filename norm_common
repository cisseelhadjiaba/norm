#!/bin/bash

OURNAME=`basename -- $0`
TARDIR="$HOME/.cache/norm"
LIBSUFFIX=so
[[ $OSTYPE == *darwin* ]] && LIBSUFFIX=dylib

NUMCPU=`getconf _NPROCESSORS_ONLN`
[ -z "$NUMCPU" ] && NUMCPU=1
NUMJOBS=$(( $NUMCPU * 2 ))

## find shasum binary
SHASUM_BIN=shasum
hash $SHASUM_BIN 2>/dev/null || SHASUM_BIN=sha1sum

## get machine id for later
case $OSTYPE in
    *linux*)   SYSTEM_VERSION=.$(getconf GNU_LIBC_VERSION|awk '{ print $NF }') ;; #$($(ldd /bin/sh|fgrep /libc.so|awk '{ print $3 }') | fgrep 'GNU C Library'|perl -pe 's/GNU C Library.*version ([^ ,]+).*/$1/') ;;
    *freebsd*) SYSTEM_VERSION= ;;
    *openbsd*) SYSTEM_VERSION= ;;
    *darwin*)  SYSTEM_VERSION= ;;
    *)        SYSTEM_VERSION=.unknown ;;
esac
MACHINEID="${BASH_VERSINFO[5]}$SYSTEM_VERSION"
unset SYSTEM_VERSION

## allow user to set compiler
[[ -z "$CC" ]] && CC=gcc

. "$NORMDIR"/norm_common.functions
. "$NORMDIR"/norm_common.prefix

COMPILEDIR="$DEFAULT_PREFIX/tmp/compile"

onerror() {
    log "Formula $FORMULA failed to build"
}

onexit() {
    for line in "${CAVEATS[@]}"; do log $line; done
    log "Exiting"
}

setup_traps() {
    set -eE
    set -o pipefail
    trap onerror ERR
    trap onexit EXIT
}

log() {
    local DATE=`LANG=C LC_ALL=C date '+%d/%b/%Y:%T %z'`
    echo "[$DATE] [norm] $@"
}

log_success() {
    log "Formula $FORMULA -- success"
}

