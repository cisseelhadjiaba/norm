#!/bin/bash

## don't use https to download openssl source because openssl might be too old to even establish a connection!
fetch_source ftp://openssl.org/source/openssl-1.1.0i.tar.gz 6713f8b083e4c0b0e70fd090bf714169baf3717c

cc_addflags EXTRAFLAGS -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -Wl,-z,relro -Wa,--noexecstack -Wall -fno-strict-aliasing -Ofast
SSLCONFIG="--openssldir=$PREFIX/etc/ssl no-rc5 no-zlib no-ssl3"

[[ $HOSTTYPE == x86_64 ]] && SSLCONFIG="$SSLCONFIG enable-ec_nistp_64_gcc_128" && export KERNEL_BITS=64

do_unpack

fix_makefile() {
    SED=sed
    command -v gsed >/dev/null && SED=gsed
    $SED -i.bak "s:^CFLAG=.*\$:& $EXTRAFLAGS:" Makefile || false
}

pushd_src
## make both static and shared versions
log "Configuring static openssl"
./config no-shared --prefix=$PREFIX $LDFLAGS $SSLCONFIG
fix_makefile
NOPARALLEL=1 do_make all # parallel build can truncate libcrypto.a
do_test
mv apps/openssl apps/openssl.static
mv libcrypto.a libcrypto.static
mv libssl.a libssl.static
do_make -f Makefile clean
log "Configuring shared openssl"
./config shared --prefix=$PREFIX $LDFLAGS $SSLCONFIG
fix_makefile
NOPARALLEL=1 do_make all # parallel build can truncate libcrypto.so
do_test
do_install MANDIR=$PREFIX/share/man
mkdir -p $PREFIX/lib $PREFIX/bin
mv $PREFIX/bin/openssl $PREFIX/bin/openssl.dynamic
install -p -m755 apps/openssl.static $PREFIX/bin/openssl
install -p -m644 libcrypto.static $PREFIX/lib/libcrypto.a
install -p -m644 libssl.static $PREFIX/lib/libssl.a
popd

## install root certificates so curl and others can use HTTPS
mkdir -p $PREFIX/etc/ssl/certs
install -m 644 "$NORMDIR/files/ca-bundle.crt" "$PREFIX/etc/ssl/cert.pem"
