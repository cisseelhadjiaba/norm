#!/bin/bash

needs_tool cmake  ## since llvm 3.9, cmake is the only way to build this
needs_tool python ## needs python 2.7 to compile

ENABLE_SANITIZER=yes
if ! test_cc_expr "link.h" "Elf64_Dyn a = _DYNAMIC[0]"; then
    ENABLE_SANITIZER=no
    add_caveat "Your libc doesn't have _DYNAMIC in <link.h>, sanitizer support was disabled."
fi

fetch_source http://releases.llvm.org/6.0.0/llvm-6.0.0.src.tar.xz f61e0a35feb76644ba160a413ee209dd24c88f47

do_unpack
rm -f "$SRCDIR"/configure
if [[ ${BASH_SOURCE##*/} == clang ]]; then
    fetch_source http://releases.llvm.org/6.0.0/cfe-6.0.0.src.tar.xz 4cc7bef72fda70ac5e065ca0ae2d66957abe6f2a
    intree_unpack tools/clang

    if [[ $ENABLE_SANITIZER == yes ]]; then
        fetch_source http://releases.llvm.org/6.0.0/compiler-rt-6.0.0.src.tar.xz 5725f19be611034e77196461cdb4989f4258cfa4
        intree_unpack projects/compiler-rt
    fi

    fetch_source http://releases.llvm.org/6.0.0/clang-tools-extra-6.0.0.src.tar.xz c960a0d565e46e4c4f6976fac389f753076ca72e
    intree_unpack tools/clang/tools/extra
fi

do_compile_outside \
	-DOCAMLFIND= \
	-DOCAML_STDLIB_PATH= \
	-DHAVE_OCAMLOPT=FALSE \
	-DLLVM_OPTIMIZED_TABLEGEN=ON \
	-DLLVM_BUILD_LLVM_DYLIB=ON \
	-DLLVM_BUILD_TESTS=ON \
	-DLLVM_BUILD_EXAMPLES=OFF \
	-DLLVM_LINK_LLVM_DYLIB=ON
