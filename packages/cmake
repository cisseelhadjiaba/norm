#!/bin/bash

depends_on curl
depends_on zlib
depends_on bzip2
! is_without tests && depends_on file ## tests will not work without 'file' command

fetch_source http://www.cmake.org/files/v3.9/cmake-3.9.6.tar.gz 315516ba53d1f74f21c24cec5d2956b88772b300

do_unpack
## it's not cmake's job to test system-provided qt, we'll test qt when compiling qt
## also, nobody uses ccmake, avoid libncurses dependency
do_patch_inline -p0 << 'EOF'
--- Tests/CMakeLists.txt
+++ Tests/CMakeLists.txt
@@ -393,11 +393,11 @@
 
   list(APPEND TEST_BUILD_DIRS ${CMake_TEST_INSTALL_PREFIX})
 
-  if(NOT QT4_FOUND)
+  if(0)
     find_package(Qt4 QUIET)
   endif()
 
-  if(QT4_FOUND)
+  if(0)
     # test whether the Qt4 which has been found works, on some machines
     # which run nightly builds there were errors like "wrong file format"
     # for libQtCore.so. So first check it works, and only if it does add
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -523,7 +523,7 @@
 
   #---------------------------------------------------------------------
   # Use curses?
-  if (UNIX)
+  if (0)
     # there is a bug in the Syllable libraries which makes linking ccmake fail, Alex
     if(NOT CMAKE_SYSTEM_NAME MATCHES syllable)
       set(CURSES_NEED_NCURSES TRUE)
--- Source/CPack/cmCPackDragNDropGenerator.cxx
+++ Source/CPack/cmCPackDragNDropGenerator.cxx
@@ -19,6 +19,11 @@
 // For the old LocaleStringToLangAndRegionCodes() function, to convert
 // to the old Script Manager RegionCode values needed for the 'LPic' data
 // structure used for generating multi-lingual SLAs.
+#include <sys/_types.h>
+#ifndef _UUID_STRING_T
+#define _UUID_STRING_T
+typedef __darwin_uuid_string_t  uuid_string_t;
+#endif /* _UUID_STRING_T */
 #include <CoreServices/CoreServices.h>
 #endif
 
EOF
do_compile --system-curl --system-zlib --system-bzip2 -- -DCMAKE_SYSTEM_PREFIX_PATH="$PREFIX"
