#!/bin/bash

depends_on pkg-config # otherwise it won't install .pc files

fetch_source http://invisible-mirror.net/archives/ncurses/current/ncurses-6.0-20180121.tgz b3b1055cafdbd29ed361625e59f548d91a658482

CONFOPTS=(
--enable-pc-files
--disable-termcap
--enable-rpath
--enable-const
--enable-symlinks
--without-ada
--without-cxx-binding
--with-shared
--without-debug
--with-pkg-config-libdir="$PREFIX/lib/pkgconfig"
)

[[ $OSTYPE == *linux* ]] && CONFOPTS+=(--with-termlib) ## tinfo.pc from system if present will make things more difficult

LDFLAGS=" " do_unpack_compile "${CONFOPTS[@]}"
LDFLAGS=" " do_unpack_compile "${CONFOPTS[@]}" --enable-widec
# link tinfo when linking ncurses
# lame, for example, doesn't link tinfo explicitly when linking ncurses
if [[ $OSTYPE != *darwin* ]]; then
    rm -f $PREFIX/lib/libncurses{,w}.so
    echo "INPUT(libncurses.so.6 -ltinfo)" > $PREFIX/lib/libncurses.so
    echo "INPUT(libncursesw.so.6 -ltinfow)" > $PREFIX/lib/libncursesw.so
    echo -e "/* We use a linker script rather than a symlink to work around\n   an ldconfig bug, see http://bugs.debian.org/249122. */\nGROUP( libtinfo.so )" > $PREFIX/lib/libtermcap.so
    # alias termcap into tinfo -- libedit for example looks for it everywhere but tinfo
    ln -fs libtinfo.a $PREFIX/lib/libtermcap.a
    ln -fs libncurses.so $PREFIX/lib/libcurses.so
else
    ln -fs libncurses.dylib $PREFIX/lib/libcurses.dylib
fi
ln -fs libncurses.a $PREFIX/lib/libcurses.a
