#!/bin/bash
set -eE

DIRNAME=`dirname "$0"`
READLINK=`readlink "$0" || true`
LINKDIRNAME=`dirname "$READLINK"`
NORMDIR="$LINKDIRNAME"
[ ! "${LINKDIRNAME:0:1}" = "/" ] && NORMDIR="$DIRNAME/$LINKDIRNAME"
NORMDIR=`cd "$NORMDIR"; pwd`

##
## prepare norm bootstrap
##
rm -rf "$HOME"/normtest
if [ ! -e "$HOME"/normtest-bootstrap.tar.gz ]; then
    pushd "$HOME"
    $NORMDIR/norm -p normtest install ccache tar xz bzip2 gzip curl
    $NORMDIR/norm -p normtest install gcc
    ## bin is in PATH, remove stuff that might trick packages into thinking we have what we shouldn't
    cd normtest/bin
    rm -vf attr c_rehash chacl curl-config getfacl getfattr idn setfacl setfattr *pkg-config
    cd ..
    strip -gp libexec/gcc/*/*/* || true
    rm -rf tmp/compile
    cd $HOME
    tar zcf normtest-bootstrap.tar.gz normtest
    popd
fi
export PATH="$HOME/normtest/bin/ccache_wrap:$HOME/normtest/bin:$PATH"
tar xf "$HOME"/normtest-bootstrap.tar.gz -C "$HOME"
export LD_LIBRARY_PATH="$HOME/normtest/lib"

##
## set up logging
##
LOGPATH="$NORMDIR"/testlogs
mkdir -p "$LOGPATH"
LOGFILE=

sigint() {
    echo "Cancelled compilation of $file"
    [ -e "$LOGFILE" ] && mv -f "$LOGFILE"{,.cancelled}
    false
}
trap sigint SIGINT
trap sigint ERR

LIST="$@"
[ -z "$LIST" ] && LIST=`find "$NORMDIR"/packages -type f|sort -u`

rm -rf "$LOGPATH"/*.err

##
## compile each package and log output
for file in $LIST; do
    formula=${file#$NORMDIR/packages/}
    formula_name=`basename -- "$formula"`
    MD5=`md5sum "$NORMDIR/packages/$formula"|awk '{ print $1 }'`
    LOGFILE="$LOGPATH/$formula_name".log."$MD5"
    [ -f "$LOGFILE" -o -f "$LOGFILE".gz ] && continue # successful logfile exists, skip the package
    rm -rf "$HOME"/norm
    $NORMDIR/norm install "$formula" 2>&1 | tee "$LOGFILE"
    if [ "${PIPESTATUS[0]}" == "0" ]; then
        LD_LIBRARY_PATH= LD_PRELOAD= norm ldd 2>&1 | fgrep -v 'files, checking if' | tee -a "$LOGFILE"
        pushd "$HOME"
        rm -rf norm/tmp/compile
        tar zcvf norm-"$formula_name".tar.gz norm
        popd
        gzip "$LOGFILE"
    else
        mv -f "$LOGFILE"{,.err} # install failure, rename the log to indicate that
        rm -f "$LOGFILE".err.gz
    fi
done

ERRORS=`find "$NORMDIR"/testlogs -name '*.err' -type f`
if [ -n "$ERRORS" ]; then
    echo These packages have failed to build:
    echo $ERRORS
    exit 1
fi
