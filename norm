#!/usr/bin/env bash
set -eE

DIRNAME=`dirname "$0"`
READLINK=`readlink "$0" || true`
LINKDIRNAME=`dirname "$READLINK"`
NORMDIR=$LINKDIRNAME
[ ! "${LINKDIRNAME:0:1}" = "/" ] && NORMDIR="$DIRNAME/$LINKDIRNAME"
NORMDIR=`cd "$NORMDIR"; pwd`
OURNAME=`basename -- $0`
TARDIR="$HOME/.cache/norm"
LIBSUFFIX=so
[[ $OSTYPE == *darwin* ]] && LIBSUFFIX=dylib

. $NORMDIR/norm_common.functions
. $NORMDIR/norm_common.prefix

COMPILEDIR="$DEFAULT_PREFIX/tmp/compile"
NUMCPU=`getconf _NPROCESSORS_ONLN`
[ -z "$NUMCPU" ] && NUMCPU=1
NUMJOBS=$(( $NUMCPU * 2 ))
[ -n "$CI" ] && NUMJOBS=2

## find shasum binary
SHASUM_BIN=shasum
hash $SHASUM_BIN 2>/dev/null || SHASUM_BIN=sha1sum
CONFIGURE_FILTER=norm-configure-filter
perl ' use v5.10.0; ' 2>/dev/null || CONFIGURE_FILTER=cat

newprefix=$DEFAULT_PREFIX

## root users must use distro's package manager
[ $EUID == "0" ] && log "Error: I will not run for root user." && exit 1

## cc sanity check
if ! test_cc_func "stdio.h" 'printf("Hello, world!\n");'; then
    log "Error: your compiler can't compile!"
    log "Check that your have it installed correctly"
    exit 1
fi


usage() {
    echo "Usage:"
    echo "    $OURNAME install <package> [package ...]   -- install package(s)"
    echo "    $OURNAME reinstall <package> [package ...] -- reinstall already installed package(s)"
    echo "    $OURNAME list                              -- list all installed packages"
    echo "    $OURNAME ldd                               -- check for dynamic dependencies outside of prefix"
    echo "    $OURNAME sub                               -- subshell with all prefix variables set"
    echo
    echo "Common options:"
    echo "    -p <prefix> -- full path to custom prefix instead of default one"
    echo
    echo "Install options:"
    echo "    -f          -- force install, same as reinstall command"
    echo "    -k          -- after successful install, keep source code in $COMPILEDIR"
    echo
    echo "ldd options:"
    echo "    -v          -- show list of files that will be fed to ldd"
    echo
    echo "Maintainer commands:"
    echo "    $OURNAME testall  -- compile every package and save the result into separate logfiles"
}

cmd_install() {
    local force
    norm_keep_sources=
    while getopts "fk" opt; do
        case $opt in
        f)
            readonly force=-f
            ;;
        k)
            readonly norm_keep_sources=1
            ;;
        esac
    done
    shift $((OPTIND-1))
    local argument
    for argument; do
        [[ "$argument" == --with-* ]] && set_with "${argument#--with-}"
        [[ "$argument" == --without-* ]] && set_without "${argument#--without-}"
    done
    setup_fds
    [ -z "$1" ] && log "Need package names" && exit 64
    [ -n "$force" ] && log "Forcing reinstall of packages: $@" \
                    || log "Installing packages: $@"
    setup_traps
    setup_prefix "$newprefix"
    for FORMULA; do
        [[ "$FORMULA" == --* ]] && continue ## ignore flags
        setup_logs "$FORMULA"
        compile_package $force "$FORMULA"
        finish_logs
    done
}

cmd_sub() {
    log "Creating subshell so you can compile and link against norm libs"
    setup_prefix "$newprefix"
    $SHELL -i
}

cmd_ldd() {
    local verbose
    while getopts "v" opt; do
        case $opt in
        v)
            verbose=-v
            ;;
        esac
    done
    $NORMDIR/norm-ldd $verbose "$newprefix"
}

cmd_list() {
    local STATEDIR="$newprefix"/var/norm
    for file in "$STATEDIR"/*installed; do
        [ -e "$file" ] || continue
        basename -- "$file" .installed
    done
}

cmd_testall() {
    pushd $NORMDIR
    ./norm-testall "$@"
    popd
}

while getopts ":p:" opt; do
    case $opt in
    p)
        newprefix="$OPTARG"
        [ "${newprefix:0:1}" != "/" ] && newprefix="$PWD"/"$OPTARG"
        ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2
        usage
        exit 64
        ;;
    :)
        echo "Option -$OPTARG requires an argument." >&2
        usage
        exit 64
        ;;
    esac
done

shift $((OPTIND-1))
OPTIND=1

[ -z "$1" ] && echo "No command specified" >&2 && usage && exit 64

case "$1" in
    install)
        shift
        cmd_install "$@"
        ;;
    sub)
        shift
        cmd_sub "$@"
        ;;
    ldd)
        shift
        cmd_ldd "$@"
        ;;
    list)
        shift
        cmd_list "$@"
        ;;
    reinstall)
        shift
        cmd_install -f "$@"
        ;;
    testall)
        shift
        cmd_testall "$@"
        ;;
    *)
        echo "Unknown command: $1" >&2
        usage
        exit 64
        ;;
esac

